version: '3.8'

services:
  # MySQL 데이터베이스
  mysql-db:
    image: mysql:8.0
    container_name: flight-booking-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - flight-booking-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Spring Boot 애플리케이션
  flight-booking-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: flight-booking-app:prod  # 프로덕션에서 사용할 이미지 태그
    container_name: flight-booking-spring
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      # API 키는 .env 파일에서 설정
      AMADEUS_CLIENT_ID: ${AMADEUS_CLIENT_ID}
      AMADEUS_CLIENT_SECRET: ${AMADEUS_CLIENT_SECRET}
    ports:
      - "8080:8080"
    volumes:
      - app_logs:/app/logs
    networks:
      - flight-booking-network
    depends_on:
      mysql-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Nginx 리버스 프록시 (선택사항)
  nginx:
    image: nginx:alpine
    container_name: flight-booking-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - flight-booking-network
    depends_on:
      - flight-booking-app

volumes:
  mysql_data:
    driver: local
  app_logs:
    driver: local

networks:
  flight-booking-network:
    driver: bridge 