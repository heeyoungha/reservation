server:
  port: 8080

spring:
  application:
    name: flight-booking
  
  datasource:
    url: jdbc:h2:mem:flightdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect

# API 설정
amadeus:
  client-id: ${AMADEUS_CLIENT_ID:your-amadeus-client-id}
  client-secret: ${AMADEUS_CLIENT_SECRET:your-amadeus-client-secret}
  base-url: https://test.api.amadeus.com/v2
  auth-url: https://test.api.amadeus.com/v1/security/oauth2/token
  timeout: 10000
  max-retries: 3

sabre:
  client-id: ${SABRE_CLIENT_ID:your-sabre-client-id}
  client-secret: ${SABRE_CLIENT_SECRET:your-sabre-client-secret}
  base-url: https://api.test.sabre.com
  auth-url: https://api.test.sabre.com/v2/auth/token
  timeout: 15000
  max-retries: 3

# 로깅 설정
logging:
  level:
    com.example.flightbooking: DEBUG
    org.springframework.web.reactive.function.client: DEBUG

# Swagger 설정
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
  info:
    title: Flight Booking API
    description: Amadeus(REST) 및 Sabre(SOAP) API를 연동한 모의 항공 예약 시스템
    version: 1.0.0
    contact:
      name: Flight Booking Team
      email: contact@flightbooking.com
