server:
  port: 8080

spring:
  application:
    name: flight-booking
  
  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQLDialect
    database-platform: org.hibernate.dialect.MySQLDialect

# API 설정
amadeus:
  client-id: ${AMADEUS_CLIENT_ID}
  client-secret: ${AMADEUS_CLIENT_SECRET}
  base-url: https://test.api.amadeus.com/v2
  auth-url: https://test.api.amadeus.com/v1/security/oauth2/token
  timeout: 10000
  max-retries: 3

# 로깅 설정
logging:
  level:
    com.example.flightbooking: INFO
    org.springframework.web.reactive.function.client: WARN
    org.springframework.web: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Swagger 설정
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
  info:
    title: Flight Booking API
    description: Amadeus(REST) 및 Sabre(SOAP) API를 연동한 모의 항공 예약 시스템
    version: 1.0.0
    contact:
      name: Flight Booking Team
      email: contact@flightbooking.com

# 헬스체크 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always 